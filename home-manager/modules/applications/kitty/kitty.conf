include local.conf

#: New kitty windows will remember previous size
remember_window_size yes

#: Font settings
font_family      Hack Nerd Font Mono
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 12.0

# Tab title
tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{'[Z] ' if layout_name == 'stack' else ''}{title}"

#: Disable bell
enable_audio_bell no
visual_bell_duration 0.0

#: Enabled layouts (Stack is needed for zoom mode)
enabled_layouts splits,stack

#: Set terminal colors

background             #111111
foreground             #c4c8c5
cursor                 #c4c8c5
selection_background   #363a41
selection_foreground   #1d1f21
color0                 #000000
color8                 #1d1f21
color1                 #cc6666
color9                 #cc4444
color2                 #b5bd68
color10                #b5dd68
color3                 #f0c574
color11                #f0d874
color4                 #80a1bd
color12                #50a1cf
color5                 #b294ba
color13                #d294fa
color6                 #8abdb6
color14                #6ab3b7
color7                 #fffefe
color15                #e0e0e0

#: Border colors
active_border_color #ffffff
inactive_border_color #cccccc

#: Draw tab bar at top
tab_bar_edge top

#: Tab bar colors and styles
active_tab_foreground   #000
active_tab_background   #eee
active_tab_font_style   bold-italic
inactive_tab_foreground #444
inactive_tab_background #999
inactive_tab_font_style normal

#: Allow changing of the background_opacity dynamically, using either
#: keyboard shortcuts (increase_background_opacity and
#: decrease_background_opacity) or the remote control facility.
#: Changing this setting by reloading the config is not supported.
dynamic_background_opacity yes
background_opacity 0.70

#: Use NeoVim for scrollback pager
scrollback_pager nvim -u NONE -c "set nonumber nolist showtabline=0 foldcolumn=0 virtualedit=block" -c "autocmd TermOpen * normal G" -c "map q :qa!<CR>" -c "map i <NOP>" -c "map I <NOP>" -c "map a <NOP>" -c "map A <NOP>" -c "set clipboard+=unnamedplus" -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
#: Explanation:
#: nvim                         Use Neovim
#: -u NONE                      Skip loading plugins or config
#: -c "set nonumber ..."        Strip out vim interface to look more like the terminal
#: -c "autocmd TermOpen ..."    Automatically jump to the bottom upon opening a terminal
#: -c "map q :qa!<CR>"          Quit with 'q', like in `less`
#: -c "map i <NOP>"             Unmap insert mode keys
#: -c "map I <NOP>"             (same)
#: -c "map a <NOP>"             (same)
#: -c "map A <NOP>"             (same)
#: -c "set clipboard..."        Sync with OS clipboard by default
#: -c "silent write! ..."       Write terminal output and `cat` it in an nvim terminal

scrollback_lines 4000

#: Hotkeys
map kitty_mod+/ launch --type=overlay --stdin-source=@screen_scrollback fzf --no-sort --no-mouse --exact -i --tac --bind "enter:execute-silent(echo '{}' | xsel -bi)+accept"
map kitty_mod+f show_scrollback

map kitty_mod+9 set_background_opacity -0.05
map kitty_mod+0 set_background_opacity +0.05

map kitty_mod+] next_tab
map kitty_mod+[ previous_tab
map kitty_mod+t new_tab_with_cwd

map F5 launch --location=hsplit --cwd=current
map F6 launch --location=vsplit --cwd=current
map F7 layout_action rotate

map kitty_mod+h neighboring_window left
map kitty_mod+l neighboring_window right
map kitty_mod+k neighboring_window up
map kitty_mod+j neighboring_window down

map kitty_mod+up    move_window up
map kitty_mod+left  move_window left
map kitty_mod+right move_window right
map kitty_mod+down  move_window down

map kitty_mod+e scroll_line_down
map kitty_mod+y scroll_line_up
map shift+opt+e scroll_to_prompt 1
map shift+opt+y scroll_to_prompt -1

map kitty_mod+z toggle_layout stack


#: Use the option key as an alt key. With this set to no, kitty will
#: use the macOS native Option+Key = unicode character behavior. This
#: will break any Alt+key keyboard shortcuts in your terminal
#: programs, but you can use the macOS unicode input technique. You
#: can use the values: left, right, or both to use only the left,
#: right or both Option keys as Alt, instead. Changing this setting by
#: reloading the config is not supported.
macos_option_as_alt yes

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
