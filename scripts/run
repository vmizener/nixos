#!/usr/bin/env bash
SCRIPTPATH="$(dirname $(readlink -f ${BASH_SOURCE[0]}))"
# shellcheck source=./lib/core.sh
for f in $SCRIPTPATH/modules/*; do source $f; done

# Detect desktop if unset
if [ -z "${XDG_CURRENT_DESKTOP}" ]; then
    if ! [ -z "$SWAYSOCK" ]; then
        XDG_CURRENT_DESKTOP=sway
    elif ! [ -z "$NIRI_SOCKET" ]; then
        XDG_CURRENT_DESKTOP=niri
    fi
fi

# Use lowercase value of envvar
case "${XDG_CURRENT_DESKTOP,,}" in
    hyprland)
        WMLIB="${SCRIPTPATH}/wm/hyprland.sh"
        ;;
    niri)
        WMLIB="${SCRIPTPATH}/wm/niri.sh"
        ;;
    sway)
        WMLIB="${SCRIPTPATH}/wm/sway.sh"
        ;;
    *)
        WMLIB="/dev/null"
        ;;
esac
# shellcheck source=/dev/null
source "$WMLIB"

function parseSource() {
    cat "$1" | grep "^function [a-z]\+" | cut -f2 -d' ' | tr -d '()'
}
export ALL=(
    $(parseSource $WMLIB)
)
for f in $SCRIPTPATH/modules/*; do ALL+=($(parseSource $f)); done

# Exec function directly if provided arguments
if [[ "$#" -gt 0 ]] && [[ " ${ALL[*]} " =~ " $1 " ]]; then
    # Directly call the first argument, with remaining arguments passed in
    "$1" "${@:2}"
else
    IFS=$'\n' sorted=($(sort <<<"${ALL[*]}")); unset IFS
    >&2 echo "Unknown function \"$1\""
    >&2 echo "Valid functions:"
    for func in "${sorted[@]}"; do
        >&2 echo " - $func"
    done
fi
